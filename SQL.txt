SELECT id,occurred_at,total_amt_usd 
FROM orders
ORDER BY occurred_at
LIMIT 10

SELECT id,occurred_at,total_amt_usd
FROM orders
ORDER BY occurred_at
LIMIT 10

SELECT id,occurred_at,total_amt_usd 
FROM orders
ORDER BY total_amt_usd
LIMIT 20

SELECT id,account_id,total_amt_usd
FROM orders
ORDER BY account_id,total_amt_usd DESC
LIMIT 20

SELECT *
FROM orders
WHERE gloss_amt_usd >= 1000;

SELECT *
FROM orders
WHERE total_amt_usd < 1000
ORDER BY total_amt_usd
LIMIT 10;

SELECT name,website,primary_poc
FROM accounts
WHERE name = 'Exxon Mobil'

SELECT id,account_id,
standard_amt_usd/standard_qty AS standard_unit_price
FROM orders
LIMIT 10;

SELECT id,account_id,
standard_amt_usd*100/(standard_amt_usd + gloss_amt_usd + poster_amt_usd) AS standard_revenue_percentage, gloss_amt_usd*100/(standard_amt_usd + gloss_amt_usd + poster_amt_usd) AS gloss_revenue_percentage, poster_amt_usd*100/(standard_amt_usd + gloss_amt_usd + poster_amt_usd) AS poster_revenue_percentage
FROM orders
LIMIT 10;

SELECT *
FROM accounts
WHERE name LIKE 'C%';

SELECT *
FROM accounts
WHERE name LIKE '%one%';

SELECT *
FROM accounts
WHERE name LIKE '%s';

SELECT name,primary_poc,sales_rep_id
FROM accounts 
WHERE name IN ('Walmart','Target','Nordstrom')

SELECT *
FROM web_events 
WHERE channel IN ('organic','adwords')

SELECT *
FROM accounts
WHERE name NOT LIKE 'C%';

SELECT *
FROM accounts
WHERE name NOT LIKE '%one%';

SELECT *
FROM accounts
WHERE name NOT LIKE '%s';

SELECT *
FROM orders
WHERE standard_qty > 1000 AND poster_qty = 0 AND gloss_qty = 0

SELECT *
FROM accounts
WHERE name NOT LIKE 'C%' AND name LIKE '%s';

SELECT occurred_at, gloss_qty
FROM orders
WHERE gloss_qty BETWEEN 24 AND 29;

SELECT *
FROM web_events
WHERE channel IN ('organic','adwords') AND occurred_at BETWEEN '2016-01-01 00:00:00' AND '2016-12-31 00:00:00'
ORDER BY occurred_at DESC;

SELECT *
FROM web_events
WHERE channel IN ('organic', 'adwords') AND occurred_at BETWEEN '2016-01-01' AND '2017-01-01'
ORDER BY occurred_at DESC;

SELECT id
FROM orders
WHERE gloss_qty > 4000 OR poster_qty > 4000;

SELECT *
FROM orders
WHERE standard_qty = 0 AND (gloss_qty > 1000 OR poster_qty > 1000);

SELECT *
FROM accounts
WHERE (name LIKE 'C%' OR name LIKE 'W%') 
           AND ((primary_poc LIKE '%ana%' OR primary_poc LIKE '%Ana%') 
           AND primary_poc NOT LIKE '%eana%');

SELECT orders.*,accounts.name
FROM orders
JOIN accounts
ON orders.account_id = accounts.id
LIMIT 10;

SELECT accounts.website,accounts.primary_poc,orders.standard_qty, orders.gloss_qty,orders.poster_qty
FROM orders
JOIN accounts
ON orders.account_id = accounts.id
LIMIT 100;

SELECT *
FROM web_events
JOIN accounts
ON web_events.account_id = accounts.id
JOIN orders
ON accounts.id = orders.account_id

SELECT web_events.occurred_at,
web_events.channel,
accounts.primary_poc,
accounts.name
FROM web_events
JOIN accounts
ON web_events.account_id = accounts.id
WHERE accounts.name = 'Walmart'

SELECT r.name region, s.name rep, a.name account
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
ORDER BY a.name;

SELECT r.name region, a.name account, 
       o.total_amt_usd/(o.total + 0.01) unit_price
FROM region r
JOIN sales_reps s
ON s.region_id = r.id
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN orders o
ON o.account_id = a.id;

SELECT s.name AS rep,r.name AS region, a.name AS account
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON s.id = a.sales_rep_id
WHERE r.name = 'Midwest'
ORDER BY a.name

SELECT s.name AS rep,r.name AS region, a.name AS account
FROM sales_reps s
JOIN region r
ON s.region_id = r.id
JOIN accounts a
ON s.id = a.sales_rep_id
WHERE r.name = 'Midwest'  AND s.name LIKE '% K%'
ORDER BY a.name

SELECT o.total_amt_usd/o.total AS unitprice, a.name AS account, r.name AS region
FROM sales_reps s
JOIN accounts a
ON s.id = a.sales_rep_id
JOIN orders o
ON o.account_id = a.id
JOIN region r
ON r.id = s.region_id
WHERE o.standard_qty >= 100 AND o.total > 0

SELECT o.total_amt_usd/o.total AS unitprice, a.name AS account, r.name AS region
FROM sales_reps s
JOIN accounts a
ON s.id = a.sales_rep_id
JOIN orders o
ON o.account_id = a.id
JOIN region r
ON r.id = s.region_id
WHERE o.standard_qty >= 100 AND o.total > 0 AND o.poster_qty >=50

SELECT o.total_amt_usd/o.total AS unitprice, a.name AS account, r.name AS region
FROM sales_reps s
JOIN accounts a
ON s.id = a.sales_rep_id
JOIN orders o
ON o.account_id = a.id
JOIN region r
ON r.id = s.region_id
WHERE o.standard_qty > 100 AND o.total > 0 AND o.poster_qty >50

SELECT o.total_amt_usd/o.total AS unitprice, a.name AS account, r.name AS region
FROM sales_reps s
JOIN accounts a
ON s.id = a.sales_rep_id
JOIN orders o
ON o.account_id = a.id
JOIN region r
ON r.id = s.region_id
WHERE o.standard_qty > 100 AND o.total > 0 AND o.poster_qty >50
ORDER BY unitprice DESC

SELECT DISTINCT a.name, w.channel
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
ORDER BY a.name

SELECT DISTINCT a.name, w.channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
WHERE a.id = '1001';


SELECT o.occurred_at, a.name, o.total, o.total_amt_usd
FROM accounts a
JOIN orders o
ON o.account_id = a.id
WHERE o.occurred_at BETWEEN '01-01-2015' AND '01-01-2016'
ORDER BY o.occurred_at DESC

SELECT SUM(standard_qty) AS StandardQty
FROM orders

SELECT SUM(standard_amt_usd)/SUM(standard_qty) AS standard_price_per_unit
FROM orders;

SELECT MIN(occurred_at)
FROM orders

SELECT occurred_at
FROM orders
ORDER BY occurred_at
LIMIT 1;

SELECT MAX(occurred_at)
FROM orders

SELECT AVG(standard_qty) std_avg, AVG(gloss_qty) gloss_avg, AVG(poster_qty) poster_avg, AVG(standard_amt_usd) std_avg_usd, AVG(gloss_amt_usd) gloss_avg_usd, AVG(poster_amt_usd) poster_avg_usd 
FROM orders

SELECT a.name, MIN(o.occurred_at)
FROM accounts a
JOIN orders o
ON o.account_id = a.id
GROUP BY a.name
ORDER BY MIN(o.occurred_at)
LIMIT 1;

SELECT a.name, o.occurred_at
FROM accounts a
JOIN orders o
ON a.id = o.account_id
ORDER BY occurred_at
LIMIT 1;

SELECT a.name, SUM(o.total_amt_usd)
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.name

SELECT w.occurred_at, a.name, w.channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
ORDER BY w.occurred_at DESC
LIMIT 1;

SELECT channel, COUNT(channel)
FROM web_events
GROUP BY channel

SELECT a.primary_poc, MIN(w.occurred_at)
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
GROUP BY a.primary_poc
LIMIT 1;


SELECT a.primary_poc
FROM web_events w
JOIN accounts a
ON a.id = w.account_id
ORDER BY w.occurred_at
LIMIT 1;

SELECT a.name , MIN(o.total_amt_usd)
FROM orders o
JOIN accounts a
ON a.id = o.account_id
GROUP BY a.name

SELECT r.name , COUNT(s.name) No_Of_Sales_Rep
FROM region r
JOIN sales_reps s
ON r.id = s.region_id
GROUP BY r.name

SELECT r.name , COUNT(s.name) No_Of_Sales_Rep
FROM region r
JOIN sales_reps s
ON r.id = s.region_id
GROUP BY r.name

SELECT a.name , AVG(o.standard_qty) std_avg, AVG(o.gloss_qty) gloss_avg, AVG(o.poster_qty) poster_avg
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.name

SELECT a.name , AVG(o.standard_amt_usd) std_avg, AVG(o.gloss_amt_usd) gloss_avg, AVG(o.poster_amt_usd) poster_avg
FROM accounts a
JOIN orders o
ON a.id = o.account_id
GROUP BY a.name

SELECT s.name , w.channel , COUNT(w.channel)
FROM sales_reps s
JOIN accounts a
ON a.sales_rep_id = s.id
JOIN web_events w
ON a.id = w.account_id
GROUP BY s.name,w.channel

SELECT r.name, w.channel, COUNT(*) num_events
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
JOIN sales_reps s
ON s.id = a.sales_rep_id
JOIN region r
ON r.id = s.region_id
GROUP BY r.name, w.channel
ORDER BY num_events DESC;

SELECT DISTINCT a.name, r.name region
FROM accounts a
JOIN sales_reps s
ON a.sales_rep_id = s.id
JOIN region r
ON r.id = s.region_id
ORDER BY a.name, region

SELECT DISTINCT id, name
FROM accounts;

SELECT s.id, s.name, COUNT(*) num_accounts
FROM accounts a
JOIN sales_reps s
ON s.id = a.sales_rep_id
GROUP BY s.id, s.name
HAVING COUNT(*) > 5
ORDER BY num_accounts;

SELECT COUNT(a.name)
FROM accounts a
JOIN orders o
ON o.account_id = a.id
GROUP BY a.name
HAVING COUNT(o.id) > 20

SELECT a.name,COUNT(o.account_id) count
FROM accounts a 
JOIN orders o
ON o.account_id = a.id
GROUP BY a.name
ORDER BY count DESC
LIMIT 1;

SELECT a.name
FROM orders o
JOIN accounts a
ON a.id = o.account_id
GROUP BY a.name 
HAVING SUM(o.total_amt_usd) > 30000

SELECT a.name, COUNT(a.name)
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
WHERE w.channel = 'facebook'
GROUP BY a.name
HAVING COUNT(w.channel) > 6
ORDER BY COUNT(a.name) DESC

SELECT w.channel, COUNT(w.channel)
FROM accounts a
JOIN web_events w
ON w.account_id = a.id
GROUP BY w.channel
ORDER BY COUNT(w.channel) DESC

SELECT a.id, a.name, w.channel, COUNT(*) use_of_channel
FROM accounts a
JOIN web_events w
ON a.id = w.account_id
GROUP BY a.id, a.name, w.channel
ORDER BY use_of_channel DESC
LIMIT 10;

SELECT DATE_PART('year',occurred_at) AS year, SUM(total_amt_usd)
FROM orders
GROUP BY 1
ORDER BY 2 DESC;

SELECT DATE_PART('month',occurred_at) AS year, SUM(total_amt_usd)
FROM orders
GROUP BY 1
ORDER BY 2 DESC;

SELECT DATE_PART('year',occurred_at) AS year, count(total_amt_usd)
FROM orders
GROUP BY 1
ORDER BY 2 DESC;

SELECT DATE_TRUNC('month', o.occurred_at) ord_date, SUM(o.gloss_amt_usd) tot_spent
FROM orders o 
JOIN accounts a
ON a.id = o.account_id
WHERE a.name = 'Walmart'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

SELECT account_id, total_amt_usd,
CASE WHEN total_amt_usd >3000 THEN 'Large' ELSE 'Small' END AS Size
FROM orders

SELECT CASE WHEN total < 1000 THEN 'Less than 1000'
WHEN total >=1000 AND total <2000 THEN '1000-2000' 
ELSE 'Atleast 2000' END AS qty, COUNT(*)
FROM orders
GROUP BY 1

SELECT a.name, SUM(o.total_amt_usd), CASE WHEN SUM(o.total_amt_usd) > 200000 THEN 'More than 200000'
WHEN SUM(o.total_amt_usd) >=100000 AND SUM(o.total_amt_usd) <200000 THEN '100000-200000' 
ELSE 'Less than 100000' END AS value, COUNT(*)
FROM orders o
JOIN accounts a
ON a.id = o.account_id
GROUP BY 1
ORDER BY count DESC

SELECT a.name, SUM(o.total_amt_usd), CASE WHEN SUM(o.total_amt_usd) > 200000 THEN 'More than 200000'
WHEN SUM(o.total_amt_usd) >=100000 AND SUM(o.total_amt_usd) <200000 THEN '100000-200000' 
ELSE 'Less than 100000' END AS value
FROM orders o
JOIN accounts a
ON a.id = o.account_id
WHERE DATE_PART('year',o.occurred_at) = '2016' OR DATE_PART('year',o.occurred_at) = '2017'
GROUP BY 1
ORDER BY 2 DESC

SELECT s.name, COUNT(s.name), CASE WHEN COUNT(s.name) > 200 THEN 'top' ELSE 'not' END AS top_bottom
FROM orders o
JOIN accounts a
ON o.account_id = a.id
JOIN sales_reps s
ON s.id = a.sales_rep_id
GROUP BY 1
ORDER BY 2 DESC

SELECT s.name, COUNT(s.name),SUM(o.total_amt_usd) , CASE WHEN COUNT(s.name) > 200 OR SUM(o.total_amt_usd) > 750000 THEN 'top' 
WHEN COUNT(s.name) > 200 OR SUM(o.total_amt_usd) > 500000 AND  SUM(o.total_amt_usd) <= 750000 THEN 'medium' 
ELSE 'low' END AS top_bottom 
FROM orders o
JOIN accounts a
ON o.account_id = a.id
JOIN sales_reps s
ON s.id = a.sales_rep_id
GROUP BY 1
ORDER BY 3 DESC


